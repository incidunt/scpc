// Decompiled by DJ v2.9.9.60 Copyright 2000 Atanas Neshkov  Date: 2017/9/4 ÐÇÆÚÒ» 20:05:24
// Home Page : http://members.fortunecity.com/neshkov/dj.html  - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   PasswordEncoder.java

package com.core.teamwork.base.util.encrypt;

import java.io.PrintStream;
import java.security.MessageDigest;

public class PasswordEncoder
{

    public PasswordEncoder(Object salt, String algorithm)
    {
        this.salt = salt;
        this.algorithm = algorithm;
    }

    public String encode(String rawPass)
    {
        String result = null;
        try
        {
            MessageDigest md = MessageDigest.getInstance(algorithm);
            result = byteArrayToHexString(md.digest(mergePasswordAndSalt(rawPass).getBytes("utf-8")));
        }
        catch(Exception exception) { }
        return result;
    }

    public boolean isPasswordValid(String encPass, String rawPass)
    {
        String pass1 = (new StringBuilder()).append(encPass).toString();
        String pass2 = encode(rawPass);
        return pass1.equals(pass2);
    }

    private String mergePasswordAndSalt(String password)
    {
        if(password == null)
            password = "";
        if(salt == null || "".equals(salt))
            return password;
        else
            return (new StringBuilder(String.valueOf(password))).append("{").append(salt.toString()).append("}").toString();
    }

    private static String byteArrayToHexString(byte b[])
    {
        StringBuffer resultSb = new StringBuffer();
        for(int i = 0; i < b.length; i++)
            resultSb.append(byteToHexString(b[i]));

        return resultSb.toString();
    }

    private static String byteToHexString(byte b)
    {
        int n = b;
        if(n < 0)
            n += 256;
        int d1 = n / 16;
        int d2 = n % 16;
        return (new StringBuilder(String.valueOf(hexDigits[d1]))).append(hexDigits[d2]).toString();
    }

    public static String getPassword(String password)
    {
        PasswordEncoder encoderMd5 = new PasswordEncoder("cn.dianyou.teamwork", "MD5");
        String encode = encoderMd5.encode(password);
        return encode;
    }

    public static void main(String args[])
    {
        System.out.println(getPassword("123456"));
    }

    private static final String hexDigits[] = {
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
        "a", "b", "c", "d", "e", "f"
    };
    private Object salt;
    private String algorithm;

}